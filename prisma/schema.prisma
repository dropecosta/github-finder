// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  image          String?
  email          String?   @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  sessions       Session[]
  accounts       Account[]
  favoriteIds    String[]  @db.ObjectId
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Technology {
  id                     String                 @id @default(uuid()) @map("_id")
  name                   String                 @unique
  repositoryTechnologies RepositoryTechnology[]
}

model Repository {
  id                     String                 @id @default(uuid()) @map("_id") @db.ObjectId
  name                   String
  description            String?
  language               String?
  stars                  Int?
  forks                  Int?
  url                    String
  createdAt              DateTime               @default(now()) @map("created_at")
  repositoryTechnologies RepositoryTechnology[]
}

model RepositoryTechnology {
  id           String     @id @default(uuid()) @map("_id") @db.ObjectId
  technology   Technology @relation(fields: [technologyId], references: [id])
  technologyId String
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId String

  @@index([technologyId, repositoryId], name: "idx_technology_repository")
}
